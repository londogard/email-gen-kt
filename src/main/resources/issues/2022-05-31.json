{
  "number": 55,
  "introduction": "Tipsrundan 55 is here! Very little App, Frontend & 'Soft-Values' links this time. Are you sitting on that cool link? **Please share!**",
  "supertips": {
    "title": "Implicit vs Scala 3's Given",
    "description": "Fredrik Strandin hits right home with this recommendation. This is a blog by Alexandru which walks through the new concept of `Given` in Scala 3, which Alexandru does not approve of, that tries to be an alternative to `implicit` (oh have I fighted you dear `implicit`).\n\n>Idonâ€™t like given, as an alternative to implicit in Scala 3. The more I try working with it, the more it annoys me; and my understanding may be superficial, but I donâ€™t like this direction. Hereâ€™s a comparison between given and implicit, that I hope is fairâ€¦ ",
    "link": "https://alexn.org/blog/2022/05/11/implicit-vs-scala-3-given/"
  },
  "godisboxen": [
    {
      "title": "What I learnt from Benchmarking Http4k, Ktor (Kotlin) and Actix v2,v3 (Rust) Microservices",
      "description": "Who doesn't enjoy a good benchmarking blog? Especially with the 'hard to benchmark' JVM! This blog is written in a enjoyable way and is very interesting to learn about different characteristics between JVM/Rust.  \nAll in all I'm interested in trying Http4k which is a functional backend using functions only. **Anyone else wanna team up a Competence Evening to test it out?**",
      "category": "BACKEND",
      "link": "https://matej.laitl.cz/bench-rust-kotlin-microservices/"
    },
    {
      "title": "What I learnt from Benchmarking Http4k, Ktor (Kotlin) and Actix v2,v3 (Rust) Microservices",
      "description": "Who doesn't enjoy a good benchmarking blog? Especially with the 'hard to benchmark' JVM! This blog is written in a enjoyable way and is very interesting to learn about different characteristics between JVM/Rust.  \nAll in all I'm interested in trying Http4k which is a functional backend using functions only. Anyone else wanna team up a Competence Evening?",
      "category": "BACKEND",
      "link": "https://matej.laitl.cz/bench-rust-kotlin-microservices/"
    },
    {
      "title": "Matplotlib Mosaic - Multigraphs simplified",
      "description": "Ever felt like plotting mulitple plots in Python being a pain? I'm with you.  \nUsing `plt.subplot_mosaic(..)` one can simply achieve really cool plots as in the image below ðŸ‘‡. ![](https://twitter.com/leifdenby/status/1491808998131126273/photo/1)",
      "link": "https://twitter.com/leifdenby/status/1491808998131126273?s=20&t=MWetylq_2JsyvDKlZXoOPg"
    },
    {
      "title": "PartialExecutor: Reducing WebAssembly size byty exploring all executions in LLVM",
      "description": "A bit heavy, but really cool!\n\n>\nPartial Executer is a brand-new LLVM optimization pass that uses an Interpreter-like engine to prove some code will never be executed, making it safe to eliminate it.\n\n>In this article, I will explain the ideas behind it, the engineering challenges, and the results of this work.",
      "link": "https://leaningtech.com/reducing-webassembly-size-by-exploring-all-executions-in-llvm/"
    }
  ]
}